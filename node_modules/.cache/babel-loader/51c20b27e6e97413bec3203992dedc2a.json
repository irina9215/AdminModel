{"ast":null,"code":"import constants from '../constants';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    status: constants.SUCCESS,\n    data: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var nextState = state;\n\n  switch (action.type) {\n    case constants.GET_FIELDS:\n      nextState = Object.assign({}, state, {\n        status: constants.PENDING,\n        data: []\n      });\n      break;\n\n    case constants.GET_FIELDS + constants._SUCCESS:\n      nextState = Object.assign({}, state, {\n        status: constants.SUCCESS,\n        data: action.payload.data.data\n      });\n      break;\n\n    case constants.GET_FIELDS + constants._FAIL:\n      nextState = Object.assign({}, state, {\n        status: constants.FAIL,\n        data: []\n      });\n      break;\n\n    case constants.UPLOAD + constants._SUCCESS:\n      nextState = Object.assign({}, state, {\n        status: constants.SUCCESS,\n        data: action.payload.data\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  return nextState;\n});","map":{"version":3,"sources":["/Users/irimo/Documents/GitHub/prototype-0.1-src_v2/src/reducers/fields.js"],"names":["constants","state","status","SUCCESS","data","action","nextState","type","GET_FIELDS","Object","assign","PENDING","_SUCCESS","payload","_FAIL","FAIL","UPLOAD"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,gBAAe,YAGD;AAAA,MAHEC,KAGF,uEAHU;AACtBC,IAAAA,MAAM,EAAEF,SAAS,CAACG,OADI;AAEtBC,IAAAA,IAAI,EAAE;AAFgB,GAGV;AAAA,MAAXC,MAAW;AACZ,MAAIC,SAAS,GAAGL,KAAhB;;AACA,UAAQI,MAAM,CAACE,IAAf;AACE,SAAKP,SAAS,CAACQ,UAAf;AACEF,MAAAA,SAAS,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAAEC,QAAAA,MAAM,EAAEF,SAAS,CAACW,OAApB;AAA6BP,QAAAA,IAAI,EAAE;AAAnC,OAAzB,CAAZ;AACA;;AACF,SAAKJ,SAAS,CAACQ,UAAV,GAAuBR,SAAS,CAACY,QAAtC;AACEN,MAAAA,SAAS,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAAEC,QAAAA,MAAM,EAAEF,SAAS,CAACG,OAApB;AAA6BC,QAAAA,IAAI,EAAEC,MAAM,CAACQ,OAAP,CAAeT,IAAf,CAAoBA;AAAvD,OAAzB,CAAZ;AACA;;AACF,SAAKJ,SAAS,CAACQ,UAAV,GAAuBR,SAAS,CAACc,KAAtC;AACER,MAAAA,SAAS,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAAEC,QAAAA,MAAM,EAAEF,SAAS,CAACe,IAApB;AAA0BX,QAAAA,IAAI,EAAE;AAAhC,OAAzB,CAAZ;AACA;;AACF,SAAKJ,SAAS,CAACgB,MAAV,GAAmBhB,SAAS,CAACY,QAAlC;AACEN,MAAAA,SAAS,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAAEC,QAAAA,MAAM,EAAEF,SAAS,CAACG,OAApB;AAA6BC,QAAAA,IAAI,EAAEC,MAAM,CAACQ,OAAP,CAAeT;AAAlD,OAAzB,CAAZ;AACA;;AACF;AACE;AAdJ;;AAgBA,SAAOE,SAAP;AACD,CAtBD","sourcesContent":["import constants from '../constants';\nexport default (state = {\n  status: constants.SUCCESS,\n  data: []\n}, action) => {\n  let nextState = state;\n  switch (action.type) {\n    case constants.GET_FIELDS:\n      nextState = Object.assign({}, state, { status: constants.PENDING, data: [] });\n      break;\n    case constants.GET_FIELDS + constants._SUCCESS:\n      nextState = Object.assign({}, state, { status: constants.SUCCESS, data: action.payload.data.data });\n      break;\n    case constants.GET_FIELDS + constants._FAIL:\n      nextState = Object.assign({}, state, { status: constants.FAIL, data: [] });\n      break;\n    case constants.UPLOAD + constants._SUCCESS:\n      nextState = Object.assign({}, state, { status: constants.SUCCESS, data: action.payload.data });\n      break;\n    default:\n      break;\n  }\n  return nextState;\n};"]},"metadata":{},"sourceType":"module"}